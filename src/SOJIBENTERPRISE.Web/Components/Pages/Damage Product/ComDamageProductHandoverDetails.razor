@page "/DamageProductHandoverDetails/{HandoverId:int}"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@using QuestPDF.Fluent
@using QuestPDF.Infrastructure
<Message @ref="notificationComponent" />
<h3>Damage Product Handover Details</h3>

<RadzenCard>
    <div class="d-flex align-items-center mb-3">
        <RadzenButton Text="Export To PDF" Icon="picture_as_pdf" Click="@(args => ExportToPdf())" />
    </div>

    <div class="summary-section mb-3" style="margin-top: 20px;">
        <RadzenFieldset Text="Summary" Style="width: 100%;">
            <div class="row">
                 
                <div class="col-md-3">
                    <RadzenLabel Text="Supplier:" />
                    <RadzenLabel Text="@handover?.Supplier.Name" />
                </div>
                <div class="col-md3">
                    <RadzenLabel Text="Date:" />
                    <RadzenLabel Text="@handover?.Date.ToString("d")" />
                </div>
            </div>
            <div class="row" style="margin-top: 10px;">
                <div class="col-md-3">
                    <RadzenLabel Text="Product Price:" />
                    <RadzenLabel Text="@($"৳{handover?.MainPrice:0.00}")" />
                </div>
                <div class="col-md-3">
                    <RadzenLabel Text="Extra Price:" />
                    <RadzenLabel Text="@($"৳{handover?.ExtraPrice:0.00}")" />
                </div>
                <div class="col-md-3">
                    <RadzenLabel Text="Discount Price:" />
                    <RadzenLabel Text="@($"৳{handover?.DiscountPrice:0.00}")" />
                </div>
                <div class="col-md-3">
                    <RadzenLabel Text="Total Price:" />
                    <RadzenLabel Text="@($"৳{handover?.TotalPrice:0.00}")" />
                </div>
                
            </div>
        </RadzenFieldset>
    </div>

    <RadzenDataGrid Data="@handoverDetails" TItem="DamageProductHandoverListDetailsDTO" PageSize="10" AllowPaging="true" AllowSorting="true" AllowFiltering="false">
        <Columns>
            <RadzenDataGridColumn TItem="DamageProductHandoverListDetailsDTO" Property="@nameof(DamageProductHandoverListDetailsDTO.ProductName)" Title="Product Name"  />
            @* <RadzenDataGridColumn TItem="DamageProductHandoverListDetailsDTO" Property="@nameof(DamageProductHandoverListDetailsDTO.Quantity)" Title="Quantity"  /> *@
            <RadzenDataGridColumn TItem="DamageProductHandoverListDetailsDTO" Title="Quantity">
                <Template Context="item">
                    <div>@item.Quantity</div>
                </Template>
                <FooterTemplate>
                    <div class="fw-bold">@handoverDetails.Sum(o => o.Quantity)</div>
                </FooterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DamageProductHandoverListDetailsDTO" Title="Price" TextAlign="TextAlign.Right">
                <Template Context="item">
                    <div>৳@item.TotalPrice.ToString("N2")</div>
                </Template>
                <FooterTemplate>
                    <div class="text-end fw-bold">৳@handoverDetails.Sum(o => o.TotalPrice).ToString("N2")</div>
                </FooterTemplate>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenCard>

@code {
    [Parameter]
    public int HandoverId { get; set; }

    [Inject] 
    private IDamageProductHandover m_DamageProductHandover { get; set; }
    
    [Inject]
    private IJSRuntime JSRuntime { get; set; }
    
    [Inject]
    private ILookup m_Lookup { get; set; }
    private Message notificationComponent;
    
    private DamageProductHandover handover;
    private IList<DamageProductHandoverListDetailsDTO> handoverDetails = new List<DamageProductHandoverListDetailsDTO>();

    protected override async Task OnInitializedAsync()
    {
        handover = m_DamageProductHandover.GetDamageProductHandoverById(HandoverId);
        handoverDetails = m_DamageProductHandover.GetAllDamageProductHandoverListDetails(HandoverId);
    }

    public async Task ExportToPdf()
    {
        if (!ValidationHelper.ValidateAndNotify(handoverDetails, notificationComponent))
            return;

        var company = m_Lookup.GetCompanyInfo();
        
        var document = Document.Create(container =>
        {
            container.Page(page =>
            {
                // Set individual margins
                page.MarginTop(20);     // Top margin
                page.MarginBottom(20);  // Bottom margin
                page.MarginLeft(40);    // Left margin
                page.MarginRight(40);   // Right margin

                page.Size(PageSizes.A4);
                page.DefaultTextStyle(style => style.FontSize(10));

                page.Header().Element(ComposeHeader);

                page.Content()
                    .PaddingVertical(10)
                    .Column(column =>
                    {
                        // Summary section
                        column.Item().PaddingBottom(10).Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
            {
                columns.RelativeColumn(); // Left column for labels
                columns.RelativeColumn(); // Left column for values
                columns.RelativeColumn(); // Right column for labels
                columns.RelativeColumn(); // Right column for values
            });

                            // Left column items
                            table.Cell().Padding(5).Text("Supplier:").Bold();
                            table.Cell().Padding(5).Text(handover?.Supplier.Name ?? "");
                            // Right column items
                            table.Cell().Padding(5).Text("Extra Price:").Bold();
                            table.Cell().Padding(5).Text($"৳{handover?.ExtraPrice:N2}" ?? "");

                            table.Cell().Padding(5).Text("Date:").Bold();
                            table.Cell().Padding(5).Text(handover?.Date.ToString("d") ?? "");
                            table.Cell().Padding(5).Text("Discount Price:").Bold();
                            table.Cell().Padding(5).Text($"৳{handover?.DiscountPrice:N2}" ?? "");

                            
                            table.Cell().Padding(5).Text("Total Price:").Bold();
                            table.Cell().Padding(5).Text($"৳{handover?.TotalPrice:N2}" ?? "");
                        });

                        // Details table
                        column.Item().PaddingTop(10).Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(4);
                                columns.RelativeColumn(2);
                                columns.RelativeColumn(2);
                            });

                            // Header
                            table.Header(header =>
                            {
                                header.Cell().Background("#f5f5f5").Padding(5).Text("Product Name").Bold();
                                header.Cell().Background("#f5f5f5").Padding(5).Text("Quantity").Bold();
                                header.Cell().Background("#f5f5f5").Padding(5).Text("Total Price").Bold();
                            });

                            // Data rows
                            foreach (var item in handoverDetails)
                            {
                                table.Cell().PaddingVertical(5).PaddingHorizontal(5).Text(item.ProductName);
                                table.Cell().PaddingVertical(5).PaddingHorizontal(5).Text(item.Quantity.ToString());
                                table.Cell().PaddingVertical(5).PaddingHorizontal(5).Text($"৳{item.TotalPrice.ToString():N2}");
                            }

                            // Footer with totals
                            table.Cell().ColumnSpan(1).PaddingVertical(5).PaddingHorizontal(5).AlignRight().Text("Total:").Bold();
                            table.Cell().PaddingVertical(5).PaddingHorizontal(5).Text(handoverDetails.Sum(x => x.Quantity)).Bold();
                            table.Cell().PaddingVertical(5).PaddingHorizontal(5).Text($"৳{handoverDetails.Sum(x => x.TotalPrice):N2}").Bold();
                        });
                    });

                page.Footer().Row(row =>
                {
                    row.RelativeItem().AlignLeft().Text(DateTime.Now.ToString("dd/MM/yyyy HH:mm"));
                    row.RelativeItem().AlignCenter().Text(text =>
                    {
                        text.CurrentPageNumber();
                        text.Span(" / ");
                        text.TotalPages();
                    });
                    row.RelativeItem(); // Empty space for right side (optional)
                });
            });
        });

        using var stream = new MemoryStream();
        document.GeneratePdf(stream);

        var fileName = $"DamageProductHandover_{HandoverId}_{DateTime.Now:yyyyMMddHHmmss}.pdf";
        await JSRuntime.InvokeVoidAsync("downloadFile", fileName, "application/pdf", stream.ToArray());
    }

    void ComposeHeader(IContainer container)
    {
        var company = m_Lookup.GetCompanyInfo();

        container.Row(row =>
        {
            row.RelativeItem().Column(column =>
            {
                column.Item().AlignCenter().Text($"{company.CompanyName}").Bold().FontSize(16);
                column.Item().AlignCenter().Text($"{company.Address}").FontSize(10);
                column.Item().AlignCenter().Text($"Damage Product Handover Details - #{HandoverId}").Bold().FontSize(12);
            });
        });
    }
}